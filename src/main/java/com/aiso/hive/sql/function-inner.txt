int  ascii(string str)  返回str第一个字符串的数值

string  base64(binary bin)  将二进制参数转换为base64字符串

string  concat(string|binary A, string|binary B...)  返回将A和B按顺序连接在一起的字符串，如：concat('foo', 'bar') 返回'foobar'

array<struct<string,double>>  context_ngrams(array<array<string>>, array<string>, int K, int pf)  从一组标记化的句子中返回前k个文本

string  concat_ws(string SEP, string A, string B...)  类似concat() ，但使用自定义的分隔符SEP

string  concat_ws(string SEP, array<string>)  类似concat_ws() ，但参数为字符串数组

string  decode(binary bin, string charset)  使用指定的字符集将第一个参数解码为字符串，如果任何一个参数为null，返回null。可选字符集为： 'US_ASCII', 'ISO-8859-1', 'UTF-8', 'UTF-16BE', 'UTF-16LE', 'UTF-16'

binary  encode(string src, string charset)  使用指定的字符集将第一个参数编码为binary ，如果任一参数为null，返回null

int  find_in_set(string str, string strList)  返回str在strList中第一次出现的位置，strList为用逗号分隔的字符串，如果str包含逗号则返回0，若任何参数为null，返回null。如： find_in_set('ab', 'abc,b,ab,c,def') 返回3

string  format_number(number x, int d)  将数字x格式化为'#,###,###.##'，四舍五入为d位小数位，将结果做为字符串返回。如果d=0，结果不包含小数点或小数部分

string  get_json_object(string json_string, string path)  从基于json path的json字符串中提取json对象，返回json对象的json字符串，如果输入的json字符串无效返回null。Json 路径只能有数字、字母和下划线，不允许大写和其它特殊字符

boolean  in_file(string str, string filename)  如果str在filename中以正行的方式出现，返回true

int  instr(string str, string substr)  返回substr在str中第一次出现的位置。若任何参数为null返回null，若substr不在str中返回0。Str中第一个字符的位置为1

int  length(string A)  返回A的长度

int  locate(string substr, string str[, int pos])  返回substr在str的位置pos后第一次出现的位置

string  lower(string A) lcase(string A)  返回字符串的小写形式

string  lpad(string str, int len, string pad)  将str左侧用字符串pad填充，长度为len

string  ltrim(string A)  去掉字符串A左侧的空格，如：ltrim(' foobar ')的结果为'foobar '

array<struct<string,double>>  ngrams(array<array<string>>, int N, int K, int pf)  从一组标记化的Returns the top-k 句子中返回前K个N-grams

string  parse_url(string urlString, string partToExtract [, string keyToExtract])  返回给定URL的指定部分，partToExtract的有效值包括HOST，PATH， QUERY， REF， PROTOCOL， AUTHORITY，FILE和USERINFO。例如：  parse_url('http://facebook.com/path1/p.php?k1=v1&k2=v2#Ref1', 'HOST') 返回 'facebook.com'.。当第二个参数为QUERY时，可以使用第三个参数提取特定参数的值，例如： parse_url('http://facebook.com/path1/p.php?k1=v1&k2=v2#Ref1',
'QUERY', 'k1') 返回'v1'

string  printf(String format, Obj... args)  将输入参数进行格式化输出

string  regexp_extract(string subject, string pattern, int index)  使用pattern从给定字符串中提取字符串。如： regexp_extract('foothebar', 'foo(.*?)(bar)', 2) 返回'bar' 有时需要使用预定义的字符类：使用'\s' 做为第二个参数将匹配s，'s'匹配空格等。参数index是Java正则匹配器方法group()方法中的索引

string  regexp_replace(string INITIAL_STRING, string PATTERN, string REPLACEMENT)  使用REPLACEMENT替换字符串INITIAL_STRING中匹配PATTERN的子串，例如： regexp_replace("foobar", "oo|ar", "") 返回'fb'

string  repeat(string str, int n)  将str重复n次

string  reverse(string A)  将字符串A翻转

string  rpad(string str, int len, string pad)  在str的右侧使用pad填充至长度len

string  rtrim(string A)  去掉字符串A右侧的空格，如： rtrim(' foobar ') 返回 ' foobar'
array<array<string>>  sentences(string str, string lang, string locale)  将自然语言文本处理为单词和句子，每个句子在适当的边界分割，返回单词的数组。参数lang和local为可选参数，例如： sentences('Hello there! How are you?') 返回( ("Hello", "there"), ("How", "are", "you") )

string  space(int n)  返回n个空格的字符串

array  split(string str, string pat)  用pat分割字符串str，pat为正则表达式

map<string,string>  str_to_map(text[, delimiter1, delimiter2])  使用两个分隔符将文本分割为键值对。第一个分隔符将文本分割为K-V 对，第二个分隔符分隔每个K-V 对。默认第一个分隔符为“，“，第二个分隔符为=

string  substr(string|binary A, int start) substring(string|binary A, int start)  返回A从位置start直到结尾的子串

string  substr(string|binary A, int start, int len) substring(string|binary A, int start, int len)  返回A中从位置start开始，长度为len的子串，如： substr('foobar', 4, 1) 返回 'b'

string  translate(string input, string from, string to)  将input中出现在from中的字符替换为to中的字符串，如果任何参数为null，结果为null

string  trim(string A)  去掉字符串A两端的空格

binary  unbase64(string str)  将base64字符串转换为二进制

string  upper(string A) ucase(string A)  返回字符串A的大写形式


1.、字符串长度计算函数：length

语法: length(string A)，
返回值: int
说明：返回字符串A的长度
例子：

hive> select length('iteblog') from iteblog;
7

2.、字符串反转函数：reverse

语法: reverse(string A)
返回值: string
说明：返回字符串A的反转结果
例子：

hive> select reverse(iteblog') from iteblog;
golbeti

3.、字符串连接函数：concat

语法: concat(string A, string B…)
返回值: string
说明：返回输入字符串连接后的结果，支持任意个输入字符串
例子：

hive> select concat('www','.iteblog','.com') from iteblog;
www.iteblog.com

4、带分隔符字符串连接函数：concat_ws

语法: concat_ws(string SEP, string A, string B…)
返回值: string
说明：返回输入字符串连接后的结果，SEP表示各个字符串间的分隔符
例子：

hive> select concat_ws('.','www','iteblog','com') from iteblog;
www.iteblog.com


5、字符串截取函数：substr,substring

语法: substr(string A, int start),substring(string A, int start)
返回值: string
说明：返回字符串A从start位置到结尾的字符串
例子：

hive> select substr('iteblog',3) from iteblog;
eblog
hive>  selectsubstr('iteblog',-1) from iteblog;
g

6、 字符串截取函数：substr,substring

语法: substr(string A, int start, int len),substring(string A, int start, int len)
返回值: string
说明：返回字符串A从start位置开始，长度为len的字符串
例子：

hive> select substr('abcde',3,2) from iteblog;
cd
hive> select substring('abcde',3,2) from iteblog;
cd
hive>select substring('abcde',-2,2) from iteblog;
de

7、字符串转大写函数：upper,ucase

语法: upper(string A) ucase(string A)
返回值: string
说明：返回字符串A的大写格式
例子：

hive> select upper('abSEd') from iteblog;
ABSED
hive> select ucase('abSEd') from iteblog;
ABSED

8、字符串转小写函数：lower,lcase

语法: lower(string A) lcase(string A)
返回值: string
说明：返回字符串A的小写格式
例子：

hive> select lower('abSEd') from iteblog;
absed
hive> select lcase('abSEd') from iteblog;
absed

9、去空格函数：trim

语法: trim(string A)
返回值: string
说明：去除字符串两边的空格
例子：

hive> select trim(' abc ') from iteblog;
abc

10、左边去空格函数：ltrim

语法: ltrim(string A)
返回值: string
说明：去除字符串左边的空格
例子：

hive> select ltrim(' abc ') from iteblog;
abc

11、右边去空格函数：rtrim

语法: rtrim(string A)
返回值: string
说明：去除字符串右边的空格
例子：

hive> select rtrim(' abc ') from iteblog;
abc

12、正则表达式替换函数：regexp_replace

语法: regexp_replace(string A, string B, string C)
返回值: string
说明：将字符串A中的符合java正则表达式B的部分替换为C。注意，在有些情况下要使用转义字符,类似oracle中的regexp_replace函数。
例子：

hive> select regexp_replace('foobar', 'oo|ar', '') from iteblog;
fb

13、正则表达式解析函数：regexp_extract

语法: regexp_extract(string subject, string pattern, int index)
返回值: string
说明：将字符串subject按照pattern正则表达式的规则拆分，返回index指定的字符。
例子：

hive> select regexp_extract('foothebar', 'foo(.*?)(bar)', 1) fromiteblog;
the

hive> select regexp_extract('foothebar', 'foo(.*?)(bar)', 2) fromiteblog;
bar

hive> select regexp_extract('foothebar', 'foo(.*?)(bar)', 0) fromiteblog;
foothebar

注意，在有些情况下要使用转义字符，下面的等号要用双竖线转义，这是java正则表达式的规则。

select data_field,
     regexp_extract(data_field,'.*?bgStart\\=([^&]+)',1) as aaa,
     regexp_extract(data_field,'.*?contentLoaded_headStart\\=([^&]+)',1) as bbb,
     regexp_extract(data_field,'.*?AppLoad2Req\\=([^&]+)',1) as ccc
     from pt_nginx_loginlog_st
     where pt = '2012-03-26'limit 2;

14、URL解析函数：parse_url

语法: parse_url(string urlString, string partToExtract [, stringkeyToExtract])
返回值: string
说明：返回URL中指定的部分。partToExtract的有效值为：HOST, PATH, QUERY, REF, PROTOCOL, AUTHORITY, FILE, and USERINFO.
例子：

hive> select parse_url('http://iteblog.com?weixin=iteblog_hadoop', 'HOST') from iteblog;
iteblog.com
hive> select parse_url('http://iteblog.com?weixin=iteblog_hadoop',
       > 'QUERY','weixin') from iteblog;
iteblog_hadoop

15、json解析函数：get_json_object

语法: get_json_object(string json_string, string path)
返回值: string
说明：解析json的字符串json_string,返回path指定的内容。如果输入的json字符串无效，那么返回NULL。
例子：

hive> select get_json_object('{"store":
>  {"fruit":\[{"weight":8,"type":"apple"},{"weight":9,"type":"pear"}],
>   "bicycle":{"price":19.95,"color":"red"}
>   },
> "email":"amy@only_for_json_udf_test.net",
>  "owner":"amy"
> }
> ','$.owner') from iteblog;
amy

16、空格字符串函数：space

语法: space(int n)
返回值: string
说明：返回长度为n的字符串
例子：
hive> select space(10) from iteblog;
hive> select length(space(10)) from iteblog;
10

17、重复字符串函数：repeat
语法: repeat(string str, int n)
返回值: string
说明：返回重复n次后的str字符串
例子：

hive> select repeat('abc',5) from iteblog;
abcabcabcabcabc

18、首字符ascii函数：ascii

语法: ascii(string str)
返回值: int
说明：返回字符串str第一个字符的ascii码
例子：

hive> select ascii('abcde') from iteblog;
97

19、左补足函数：lpad

语法: lpad(string str, int len, string pad)
返回值: string
说明：将str进行用pad进行左补足到len位
例子：

hive> select lpad('abc',10,'td') from iteblog;
tdtdtdtabc

注意：与GP，ORACLE不同，pad 不能默认

20、右补足函数：rpad

语法: rpad(string str, int len, string pad)
返回值: string
说明：将str进行用pad进行右补足到len位
例子：

hive> select rpad('abc',10,'td') from iteblog;
abctdtdtdt

21、分割字符串函数: split

语法: split(string str, stringpat)
返回值: array
说明: 按照pat字符串分割str，会返回分割后的字符串数组
例子：

hive> select split('abtcdtef','t') from iteblog;
["ab","cd","ef"]

22、集合查找函数:find_in_set

语法: find_in_set(string str, string strList)
返回值: int
说明: 返回str在strlist第一次出现的位置，strlist是用逗号分割的字符串。如果没有找该str字符，则返回0
例子：

hive> select find_in_set('ab','ef,ab,de') from iteblog;
2
hive> select find_in_set('at','ef,ab,de') from iteblog;
0

------------------------------------------------------------------------------------------------------------------------------

内置函数：简单函数(map)，聚合函数(reduce)，集合函数(map)，特殊函数
正则表达式
自定义函数:UDF(map),UDAF(reduce)

show functions
desc function concat
desc function extended concat;

简单函数
函数的计算粒度-单条记录
关系运算
数学运算
逻辑运算
数值计算
类型转换
日期函数
条件函数
字符串函数
统计函数



窗口函数
应用场景
用于分区排序
动态Group by
Top N
累计计算
层次查询
Windowing functions
lead
lag
FIRST_VALUE
LAST_VLAUE


-------------------------


语法: count(*), count(expr), count(DISTINCT expr[, expr_.])

返回值: int

说明: count(*)统计检索出的行的个数，包括NULL值的行；count(expr)返回指定字段的非空值的个数；count(DISTINCTexpr[, expr_.])返回指定字段的不同的非空值的个数

举例：

hive> select count(*) from lxw_dual;

20

hive> select count(distinct t) from lxw_dual;

10


语法: sum(col), sum(DISTINCT col)

返回值: double

说明: sum(col)统计结果集中col的相加的结果；sum(DISTINCT col)统计结果中col不同值相加的结果

举例：

hive> select sum(t) from lxw_dual;

100

hive> select sum(distinct t) from lxw_dual;

70


3. 平均值统计函数: avg

语法: avg(col), avg(DISTINCT col)

返回值: double

说明: avg(col)统计结果集中col的平均值；avg(DISTINCT col)统计结果中col不同值相加的平均值

举例：

hive> select avg(t) from lxw_dual;

50

hive> select avg (distinct t) from lxw_dual;

30

4. 最小值统计函数: min

语法: min(col)

返回值: double

说明: 统计结果集中col字段的最小值

举例：

hive> select min(t) from lxw_dual;

20

5. 最大值统计函数: max

语法: maxcol)

返回值: double

说明: 统计结果集中col字段的最大值

举例：

hive> select max(t) from lxw_dual;

120

6. 非空集合总体变量函数:var_pop

语法: var_pop(col)

返回值: double

说明: 统计结果集中col非空集合的总体变量（忽略null）

举例：

7. 非空集合样本变量函数:var_samp

语法: var_samp (col)

返回值: double

说明: 统计结果集中col非空集合的样本变量（忽略null）

举例：

8. 总体标准偏离函数:stddev_pop

语法: stddev_pop(col)

返回值: double

说明: 该函数计算总体标准偏离，并返回总体变量的平方根，其返回值与VAR_POP函数的平方根相同

举例：

9. 样本标准偏离函数:stddev_samp

语法: stddev_samp (col)

返回值: double

说明: 该函数计算样本标准偏离

举例：

10．中位数函数:percentile

语法: percentile(BIGINT col, p)

返回值: double

说明: 求准确的第pth个百分位数，p必须介于0和1之间，但是col字段目前只支持整数，不支持浮点数类型

举例：

11. 中位数函数:percentile

语法: percentile(BIGINT col, array(p1 [, p2]…))

返回值: array<double>

说明: 功能和上述类似，之后后面可以输入多个百分位数，返回类型也为array<double>，其中为对应的百分位数。

举例：

select percentile(score,<0.2,0.4>) from lxw_dual；取0.2，0.4位置的数据

12. 近似中位数函数:percentile_approx

语法: percentile_approx(DOUBLE col, p [, B])

返回值: double

说明: 求近似的第pth个百分位数，p必须介于0和1之间，返回类型为double，但是col字段支持浮点类型。参数B控制内存消耗的近似精度，B越大，结果的准确度越高。默认为10,000。当col字段中的distinct值的个数小于B时，结果为准确的百分位数

举例：

13. 近似中位数函数:percentile_approx

语法: percentile_approx(DOUBLE col, array(p1 [, p2]…) [, B])

返回值: array<double>

说明: 功能和上述类似，之后后面可以输入多个百分位数，返回类型也为array<double>，其中为对应的百分位数。

举例：

14. 直方图:histogram_numeric

语法: histogram_numeric(col, b)

返回值: array<struct {'x','y'}>

说明: 以b为基准计算col的直方图信息。

举例：

hive> select histogram_numeric(100,5) from lxw_dual;
hive> select histogram_numeric(100,5) from tracker_apk_fact;

[{"x":100.0,"y":1.0}]


----------------------------------------------
关系运算
等值比较: =
语法:A = B
操作类型: 所有基本类型
描述: 如果表达式A与表达式B相等，则为TRUE；否则为FALSE
举例：
hive> select 1 from dual where 1=1;
1
不等值比较: <>
语法: A <> B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A与表达式B不相等，则为TRUE；否则为FALSE
举例：
hive> select 1 from dual where 1 <> 2;
1
小于比较: <<br>语法: A < B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A小于表达式B，则为TRUE；否则为FALSE
举例：
hive> select 1 from dual where 1 < 2;
1
小于等于比较: <=
语法: A <= B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A小于或者等于表达式B，则为TRUE；否则为FALSE
举例：
hive> select 1 from dual where 1 <= 1;
1
大于比较: >
语法: A > B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A大于表达式B，则为TRUE；否则为FALSE
举例：
hive> select 1 from dual where 2 > 1;
1
大于等于比较: >=
语法: A >= B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A大于或者等于表达式B，则为TRUE；否则为FALSE
举例：
hive> select 1 from dual where 1 >= 1;
1
String的比较要注意(常用的时间比较可以先to_date之后再比较)
hive> select  * from udftest;
OK
2011111209 00:00:00     2011111209
hive> select a,b,ab,a=b from udftest;
2011111209 00:00:00     2011111209      false   true    false
空值判断: IS NULL
语法: A IS NULL
操作类型: 所有类型
描述: 如果表达式A的值为NULL，则为TRUE；否则为FALSE
举例：
hive> select 1 from dual where null is null;
1
非空判断: IS NOT NULL
语法: A IS NOT NULL
操作类型: 所有类型
描述: 如果表达式A的值为NULL，则为FALSE；否则为TRUE
举例：
hive> select 1 from dual where 1 is not null;
1




LIKE比较: LIKE
语法: A LIKE B
操作类型: strings
描述: 如果字符串A或者字符串B为NULL，则返回NULL；如果字符串A符合表达式B的正则语法，则为TRUE；否则为FALSE。B中字符”_”透露表现随便单个字符，而字符”%”透露表现随便数目的字符。
举例：
hive> select 1 from dual where ‘football’ like ‘foot%’;
1
hive> select 1 from dual where ‘football’ like ‘foot____’;
1

JAVA的LIKE操作: RLIKE
语法: A RLIKE B
操作类型: strings
描述: 如果字符串A或者字符串B为NULL，则返回NULL；如果字符串A符合JAVA正则表达式B的正则语法，则为TRUE；否则为FALSE。
举例：
hive> select 1 from dual where ‘footbar’ rlike ‘^f.*r$’;
1
REGEXP操作: REGEXP
语法: A REGEXP B
操作类型: strings
描述: 功用与RLIKE沟通
举例：
hive> select 1 from dual where ‘footbar’ REGEXP ‘^f.*r$’;
1


数学运算
加法操作: +
语法: A + B
操作类型：所有数值类型
阐明：返回A与B相加的成效。成效的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。比如，int + int 一般成效为int类型，而int + double 一般成效为double类型
举例：
hive> select 1 + 9 from dual;
10
hive> create table udftest as select 1 + 1.2 from dual;
hive> describe udftest;
_c0     double


减法操作: -
语法: A – B
操作类型：所有数值类型
阐明：返回A与B相减的成效。成效的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。比如，int – int 一般成效为int类型，而int – double 一般成效为double类型
举例：



hive> select 10 – 5 from dual;
5
hive> create table udftest as select 5.6 – 4 from dual;
hive> describe udftest;
_c0     double


乘法操作: *
语法: A * B
操作类型：所有数值类型
阐明：返回A与B相乘的成效。成效的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。注意，如果A乘以B的成效超过默认成效类型的数值局限，则需要经过cast将成效转换成局限更大的数值类型
举例：
hive> select 40 * 5 from dual;
200

除法操作: /
语法: A / B
操作类型：所有数值类型
阐明：返回A除以B的成效。成效的数值类型为double
举例：
hive> select 40 / 5 from dual;
8.0
取余操作: %
语法: A % B
操作类型：所有数值类型
阐明：返回A除以B的余数。成效的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 41 % 5 from dual;
1
hive> select 8.4 % 4 from dual;
0.40000000000000036
注：精度在hive中是个很大的问题，类似这样的操作最好经过round指定精度
hive> select round(8.4 % 4 , 2) from dual;
0.4
位与操作: &
语法: A & B
操作类型：所有数值类型
阐明：返回A和B按位进行与操作的成效。成效的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 4 & 8 from dual;
0
hive> select 6 & 4 from dual;
4
位或操作: |
语法: A | B
操作类型：所有数值类型
阐明：返回A和B按位进行或操作的成效。成效的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 4 | 8 from dual;
12
hive> select 6 | 8 from dual;
14
位异或操作: ^
语法: A ^ B
操作类型：所有数值类型
阐明：返回A和B按位进行异或操作的成效。成效的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 4 ^ 8 from dual;
12
hive> select 6 ^ 4 from dual;
2
位取反操作: ~
语法: ~A
操作类型：所有数值类型
阐明：返回A按位取反操作的成效。成效的数值类型等于A的类型。
举例：
hive> select ~6 from dual;
-7
hive> select ~4 from dual;
-5
逻辑运算
逻辑与操作: AND
语法: A AND B
操作类型：boolean
阐明：如果A和B均为TRUE，则为TRUE；否则为FALSE。如果A为NULL或B为NULL，则为NULL
举例：
hive> select 1 from dual where 1=1 and 2=2;
1
逻辑或操作: OR
语法: A OR B
操作类型：boolean
阐明：如果A为TRUE，或者B为TRUE，或者A和B均为TRUE，则为TRUE；否则为FALSE
举例：
hive> select 1 from dual where 1=2 or 2=2;
1
逻辑非操作: NOT
语法: NOT A
操作类型：boolean
阐明：如果A为FALSE，或者A为NULL，则为TRUE；否则为FALSE
举例：
hive> select 1 from dual where not 1=2;
1
HIVE UDF收拾整理（四）
hive 添加评论
十二 192011
复合类型构建操作
Map类型构建: map
语法: map (key1, value1, key2, value2, …)
阐明：凭据输入的key和value对构建map类型
举例：
hive> Create table udftest as select map(’100′,’tom’,’200′,’mary’) as t from dual;
hive> describe udftest;
t       map
hive> select t from udftest;
{“100″:”tom”,”200″:”mary”}
Struct类型构建: struct
语法: struct(val1, val2, val3, …)
阐明：凭据输入的参数构建结构体struct类型
举例：
hive> create table udftest as select struct(‘tom’,'mary’,'tim’) as t from dual;
hive> describe udftest;
t       struct
hive> select t from udftest;
{“col1″:”tom”,”col2″:”mary”,”col3″:”tim”}
array类型构建: array
语法: array(val1, val2, …)
阐明：凭据输入的参数构建数组array类型
举例：
hive> create table udftest as select array(“tom”,”mary”,”tim”) as t from dual;
hive> describe udftest;
t       array
hive> select t from udftest;
["tom","mary","tim"]
HIVE UDF收拾整理（五）
hive 添加评论
十二 192011
复杂类型拜候操作
array类型拜候: A[n]
语法: A[n]
操作类型: A为array类型，n为int类型
阐明：返回数组A中的第n个变量值。数组的起始下标为0。比如，A是个值为['foo', 'bar']的数组类型，那末A[0]将返回’foo’,而A[1]将返回’bar’
举例：
hive> create table udftest as select array(“tom”,”mary”,”tim”) as t from dual;
hive> select t[0],t[1],t[2] from udftest;
tom     mary    tim
map类型拜候: M[key]
语法: M[key]
操作类型: M为map类型，key为map中的key值
阐明：返回map类型M中，key值为指定值的value值。比如，M是值为{‘f’ -> ‘foo’, ‘b’ -> ‘bar’, ‘all’ -> ‘foobar’}的map类型，那末M[‘all’]将会返回’foobar’
举例：
hive> Create table udftest as select map(’100′,’tom’,’200′,’mary’) as t from dual;
hive> select t['200'],t['100'] from udftest;
mary    tom
struct类型拜候: S.x
语法: S.x
操作类型: S为struct类型
阐明：返回结构体S中的x字段。比如，对于结构体struct foobar {int foo, int bar}，foobar.foo返回结构体中的foo字段
举例：
hive> create table udftest as select struct(‘tom’,'mary’,'tim’) as t from dual;
hive> describe udftest;
t       struct
hive> select t.col1,t.col3 from udftest;
tom     tim
HIVE UDF收拾整理（六）
hive 添加评论
十二 192011
数值计算
取整函数: round
语法: round(double a)
返回值: BIGINT
阐明: 返回double类型的整数值部分 （遵循四舍五入）
举例：
hive> select round(3.1415926) from dual;
3
hive> select round(3.5) from dual;
4
hive> create table udftest as select round(9542.158) from dual;
hive> describe udftest;
_c0     bigint
指定精度取整函数: round
语法: round(double a, int d)
返回值: DOUBLE
阐明: 返回指定精度d的double类型
举例：
hive> select round(3.1415926,4) from dual;
3.1416
背下取整函数: floor
语法: floor(double a)
返回值: BIGINT
阐明: 返回等于或者小于该double变量的最大的整数
举例：
hive> select floor(3.1415926) from dual;
3
hive> select floor(25) from dual;
25
背上取整函数: ceil
语法: ceil(double a)
返回值: BIGINT
阐明: 返回等于或者大于该double变量的最小的整数
举例：
hive> select ceil(3.1415926) from dual;
4
hive> select ceil(46) from dual;
46
背上取整函数: ceiling
语法: ceiling(double a)
返回值: BIGINT
阐明: 与ceil功用沟通
举例：
hive> select ceiling(3.1415926) from dual;
4
hive> select ceiling(46) from dual;
46
取随机数函数: rand
语法: rand(),rand(int seed)
返回值: double
阐明: 返回一个0到1局限内的随机数。如果指定种子seed，则会等到一个稳定的随机数序列
举例：
hive> select rand() from dual;
0.5577432776034763
hive> select rand() from dual;
0.6638336467363424
hive> select rand(100) from dual;
0.7220096548596434
hive> select rand(100) from dual;
0.7220096548596434
自然指数函数: exp
语法: exp(double a)
返回值: double
阐明: 返回自然对数e的a次方
举例：
hive> select exp(2) from dual;
7.38905609893065
自然对数函数: ln
语法: ln(double a)
返回值: double
阐明: 返回a的自然对数
举例：
hive> select ln(7.38905609893065) from dual;
2.0
以10为底对数函数: log10
语法: log10(double a)
返回值: double
阐明: 返回以10为底的a的对数
举例：
hive> select log10(100) from dual;
2.0
以2为底对数函数: log2
语法: log2(double a)
返回值: double
阐明: 返回以2为底的a的对数
举例：
hive> select log2(8) from dual;
3.0
对数函数: log
语法: log(double base, double a)
返回值: double
阐明: 返回以base为底的a的对数
举例：
hive> select log(4,256) from dual;
4.0
幂运算函数: pow
语法: pow(double a, double p)
返回值: double
阐明: 返回a的p次幂
举例：
hive> select pow(2,4) from dual;
16.0
幂运算函数: power
语法: power(double a, double p)
返回值: double
阐明: 返回a的p次幂,与pow功用沟通
举例：
hive> select power(2,4) from dual;
16.0
开仄方函数: sqrt
语法: sqrt(double a)
返回值: double
阐明: 返回a的仄方根
举例：
hive> select sqrt(16) from dual;
4.0
二进制函数: bin
语法: bin(BIGINT a)
返回值: string
阐明: 返回a的二进制代码透露表现
举例：
hive> select bin(7) from dual;643533632436986656763253293411030948988815627071980881165153141905078267642539966179467789924164317201297915035019587376841992582680785101567757385785354751201286338288392271967694402635746652603476659266458617772811077454839035559267602840446093408522139571265073301494854684732472689233877884117967682046863731766623249873671922284376426305942674346920367180235988462378698025488186023239
111
十六进制函数: hex
语法: hex(BIGINT a)
返回值: string
阐明: 如果变量是int类型，那末返回a的十六进制透露表现；如果变量是string类型，则返回该字符串的十六进制透露表现
举例：
hive> select hex(17) from dual;
11
hive> select hex(‘abc’) from dual;
616263
反转十六进制函数: unhex
语法: unhex(string a)
返回值: string
阐明: 返回该十六进制字符串所代码的字符串
举例：
hive> select unhex(’616263′) from dual;
abc
hive> select unhex(’11′) from dual;
-
hive> select unhex(616263) from dual;
abc
进制转换函数: conv
语法: conv(BIGINT num, int from_base, int to_base)
返回值: string
阐明: 将数值num从from_base进制转化到to_base进制
举例：
hive> select conv(17,10,16) from dual;
11
hive> select conv(17,10,2) from dual;
10001
绝对值函数: abs
语法: abs(double a)   abs(int a)
返回值: double        int
阐明: 返回数值a的绝对值
举例：
hive> select abs(-3.9) from dual;
3.9
hive> select abs(10.9) from dual;
10.9
正取余函数: pmod
语法: pmod(int a, int b),pmod(double a, double b)
返回值: int double
阐明: 返回正的a除以b的余数
举例：
hive> select pmod(9,4) from dual;
1
hive> select pmod(-9,4) from dual;
3
正弦函数: sin
语法: sin(double a)
返回值: double
阐明: 返回a的正弦值
举例：
hive> select sin(0.8) from dual;
0.7173560908995228
反正弦函数: asin
语法: asin(double a)
返回值: double
阐明: 返回a的反正弦值
举例：
hive> select asin(0.7173560908995228) from dual;
0.8
余弦函数: cos
语法: cos(double a)
返回值: double
阐明: 返回a的余弦值
举例：
hive> select cos(0.9) from dual;
0.6216099682706644
反余弦函数: acos
语法: acos(double a)
返回值: double
阐明: 返回a的反余弦值
举例：
hive> select acos(0.6216099682706644) from dual;
0.9
positive函数: positive
语法: positive(int a), positive(double a)
返回值: int double
阐明: 返回a
举例：
hive> select positive(-10) from dual;
-10
hive> select positive(12) from dual;
12
negative函数: negative
语法: negative(int a), negative(double a)
返回值: int double
阐明: 返回-a
举例：
hive> select negative(-5) from dual;
5
hive> select negative(8) from dual;
-8



十二 192011



复杂类型长度统计函数
Map类型长度函数: size(Map)
语法: size(Map)
返回值: int
阐明: 返回map类型的长度
举例：
hive> select size(map(’100′,’tom’,’101′,’mary’)) from dual;
2
array类型长度函数: size(Array)
语法: size(Array)
返回值: int
阐明: 返回array类型的长度
举例：
hive> select size(array(’100′,’101′,’102′,’103′)) from dual;
4
类型转换函数
类型转换函数: cast
语法: cast(expr as )
返回值: Expected “=” to follow “type”
阐明: 返回array类型的长度
举例：
hive> select cast(1 as bigint) from dual;
1

2011
日期函数
UNIX时间戳转日期函数: from_unixtime
语法: from_unixtime(bigint unixtime[, string format])
返回值: string
阐明: 转化UNIX时间戳（从1970-01-01 00:00:00 UTC到指定时间的秒数）到当前时区的时间花样
举例：
hive> select from_unixtime(1323308943,’yyyyMMdd’) from dual;
20111208

获取当前UNIX时间戳函数: unix_timestamp
语法: unix_timestamp()
返回值: bigint
阐明: 获得当前时区的UNIX时间戳
举例：
hive> select unix_timestamp() from dual;
1323309615


日期转UNIX时间戳函数: unix_timestamp
语法: unix_timestamp(string date)
返回值: bigint
阐明: 转换花样为“yyyy-MM-dd HH:mm:ss“的日期到UNIX时间戳。如果转化失败，则返回0。
举例：
hive> select unix_timestamp(’2011-12-07 13:01:03′) from dual;
1323234063


指定花样日期转UNIX时间戳函数: unix_timestamp
语法: unix_timestamp(string date, string pattern)
返回值: bigint
阐明: 转换pattern花样的日期到UNIX时间戳。如果转化失败，则返回0。
举例：
hive> select unix_timestamp(’20111207 13:01:03′,’yyyyMMdd HH:mm:ss’) from dual;
1323234063


日期时间转日期函数: to_date
语法: to_date(string timestamp)
返回值: string
阐明: 返回日期时间字段中的日期部分。
举例：
hive> select to_date(’2011-12-08 10:03:01′) from dual;
2011-12-08



日期转年函数: year
语法: year(string date)
返回值: int
阐明: 返回日期中的年。
举例：
hive> select year(’2011-12-08 10:03:01′) from dual;
2011
hive> select year(’2012-12-08′) from dual;
2012


日期转月函数: month
语法: month (string date)
返回值: int
阐明: 返回日期中的月份。
举例：
hive> select month(’2011-12-08 10:03:01′) from dual;
12
hive> select month(’2011-08-08′) from dual;
8


日期转天函数: day
语法: day (string date)
返回值: int
阐明: 返回日期中的天。
举例：
hive> select day(’2011-12-08 10:03:01′) from dual;
8
hive> select day(’2011-12-24′) from dual;
24

日期转小时函数: hour
语法: hour (string date)
返回值: int
阐明: 返回日期中的小时。
举例：
hive> select hour(’2011-12-08 10:03:01′) from dual;
10
日期转分钟函数: minute
语法: minute (string date)
返回值: int
阐明: 返回日期中的分钟。
举例：
hive> select minute(’2011-12-08 10:03:01′) from dual;
3
日期转秒函数: second
语法: second (string date)
返回值: int
阐明: 返回日期中的秒。
举例：
hive> select second(’2011-12-08 10:03:01′) from dual;
1
日期转周函数: weekofyear
语法: weekofyear (string date)
返回值: int
阐明: 返回日期在当前的周数。
举例：
hive> select weekofyear(’2011-12-08 10:03:01′) from dual;
49
日期比较函数: datediff
语法: datediff(string enddate, string startdate)
返回值: int
阐明: 返回结束日期减去开始日期的天数。
举例：
hive> select datediff(’2012-12-08′,’2012-05-09′) from dual;
213
日期增加函数: date_add
语法: date_add(string startdate, int days)
返回值: string
阐明: 返回开始日期startdate增加days天后的日期。
举例：
hive> select date_add(’2012-12-08′,10) from dual;
2012-12-18

日期减少函数: date_sub
语法: date_sub (string startdate, int days)
返回值: string
阐明: 返回开始日期startdate减少days天后的日期。
举例：
hive> select date_sub(’2012-12-08′,10) from dual;
2012-11-2


If函数: if
语法: if(boolean testCondition, T valueTrue, T valueFalseOrNull)
返回值: T
阐明:  当条件testCondition为TRUE时，返回valueTrue；否则返回valueFalseOrNull
举例：
hive> select if(1=2,100,200) from dual;
200
hive> select if(1=1,100,200) from dual;
100
非空查找函数: COALESCE
语法: COALESCE(T v1, T v2, …)
返回值: T
阐明:  返回参数中的第一个非空值；如果所有值都为NULL，那末返回NULL
举例：
hive> select COALESCE(null,’100′,’50′) from dual;
100
条件判断函数：CASE
语法: CASE a WHEN b THEN c [WHEN d THEN e]* [ELSE f] END
返回值: T
阐明：如果a等于b，那末返回c；如果a等于d，那末返回e；否则返回f
举例：
hive> Select case 100 when 50 then ‘tom’ when 100 then ‘mary’ else ‘tim’ end from dual;
mary
hive> Select case 200 when 50 then ‘tom’ when 100 then ‘mary’ else ‘tim’ end from dual;
tim
条件判断函数：CASE
语法: CASE WHEN a THEN b [WHEN c THEN d]* [ELSE e] END
返回值: T
阐明：如果a为TRUE,则返回b；如果c为TRUE，则返回d；否则返回e
举例：
hive> select case when 1=2 then ‘tom’ when 2=2 then ‘mary’ else ‘tim’ end from dual;
mary
hive> select case when 1=1 then ‘tom’ when 2=2 then ‘mary’ else ‘tim’ end from dual;
tom


字符串函数
字符串长度函数：length
语法: length(string A)
返回值: int
阐明：返回字符串A的长度
举例：


hive> select length(‘abcedfg’) from dual;
7
字符串反转函数：reverse
语法: reverse(string A)
返回值: string
阐明：返回字符串A的反转成效
举例：


hive> select reverse(‘abcedfg’) from dual;
gfdecba
字符串连接函数：concat
语法: concat(string A, string B…)
返回值: string
阐明：返回输入字符串连接后的成效，支持随便个输入字符串
举例：

hive> select concat(‘abc’,'def’,'gh’) from dual;
abcdefgh
带分隔符字符串连接函数：concat_ws
语法: concat_ws(string SEP, string A, string B…)
返回值: string
阐明：返回输入字符串连接后的成效，SEP透露表现各个字符串间的分隔符
举例：


hive> select concat_ws(‘,’,'abc’,'def’,'gh’) from dual;
abc,def,gh
字符串截取函数：substr,substring
语法: substr(string A, int start),substring(string A, int start)
返回值: string
阐明：返回字符串A从start位置到结尾的字符串
举例：
hive> select substr(‘abcde’,3) from dual;
cde
hive> select substring(‘abcde’,3) from dual;
cde
hive>  select substr(‘abcde’,-1) from dual;  （和ORACLE沟通）
e
字符串截取函数：substr,substring
语法: substr(string A, int start, int len),substring(string A, int start, int len)
返回值: string
阐明：返回字符串A从start位置开始，长度为len的字符串
举例：
hive> select substr(‘abcde’,3,2) from dual;
cd
hive> select substring(‘abcde’,3,2) from dual;
cd
hive>select substring(‘abcde’,-2,2) from dual;
de

字符串转大写函数：upper,ucase
语法: upper(string A) ucase(string A)
返回值: string
阐明：返回字符串A的大写花样
举例：
hive> select upper(‘abSEd’) from dual;
ABSED
hive> select ucase(‘abSEd’) from dual;
ABSED


字符串转小写函数：lower,lcase
语法: lower(string A) lcase(string A)
返回值: string
阐明：返回字符串A的小写花样
举例：
hive> select lower(‘abSEd’) from dual;
absed
hive> select lcase(‘abSEd’) from dual;
absed

去空格函数：trim
语法: trim(string A)
返回值: string
阐明：去除字符串双方的空格
举例：
hive> select trim(‘ abc ‘) from dual;
abc
左边去空格函数：ltrim
语法: ltrim(string A)
返回值: string
阐明：去除字符串左边的空格
举例：
hive> select ltrim(‘ abc ‘) from dual;
abc
右边去空格函数：rtrim
语法: rtrim(string A)
返回值: string
阐明：去除字符串右边的空格
举例：
hive> select rtrim(‘ abc ‘) from dual;
abc
正则表达式替换函数：regexp_replace
语法: regexp_replace(string A, string B, string C)
返回值: string
阐明：将字符串A中的符合java正则表达式B的部分替换为C。注意，在有些情况下要使用转义字符
举例：
hive> select regexp_replace(‘foobar’, ‘oo|ar’, ”) from dual;
fb
正则表达式解析函数：regexp_extract
语法: regexp_extract(string subject, string pattern, int index)
返回值: string
阐明：将字符串subject按照pattern正则表达式的规则拆分，返回index指定的字符。注意，在有些情况下要使用转义字符
举例：
hive> select regexp_extract(‘foothebar’, ‘foo(.*?)(bar)’, 1) from dual;
the
hive> select regexp_extract(‘foothebar’, ‘foo(.*?)(bar)’, 2) from dual;
bar
hive> select regexp_extract(‘foothebar’, ‘foo(.*?)(bar)’, 0) from dual;
foothebar

URL解析函数：parse_url
语法: parse_url(string urlString, string partToExtract [, string keyToExtract])
返回值: string
阐明：返回URL中指定的部分。partToExtract的有效值为：HOST, PATH, QUERY, REF, PROTOCOL, AUTHORITY, FILE, and USERINFO.
举例：
hive> select parse_url(‘http://facebook.com/path1/p.php?k1=v1&k2=v2#Ref1′, ‘HOST’) from dual;
facebook.com
hive> select parse_url(‘http://facebook.com/path1/p.php?k1=v1&k2=v2#Ref1′, ‘QUERY’, ‘k1′) from dual;
v1


json解析函数：get_json_object
语法: get_json_object(string json_string, string path)
返回值: string
阐明：解析json的字符串json_string,返回path指定的内容。如果输入的json字符串无效，那末返回NULL。
举例：
hive> select  get_json_object(‘{“store”:
>   {“fruit”:\[{"weight":8,"type":"apple"},{"weight":9,"type":"pear"}],
>    “bicycle”:{“price”:19.95,”color”:”red”}
>   },
>  “email”:”amy@only_for_json_udf_test.net”,
>  “owner”:”amy”
> }
> ‘,’$.owner’) from dual;
amy


空格字符串函数：space
语法: space(int n)
返回值: string
阐明：返回长度为n的字符串
举例：
hive> select space(10) from dual;
hive> select length(space(10)) from dual;
10


重复字符串函数：repeat
语法: repeat(string str, int n)
返回值: string
阐明：返回重复n次后的str字符串
举例：
hive> select repeat(‘abc’,5) from dual;
abcabcabcabcabc


首字符ascii函数：ascii
语法: ascii(string str)
返回值: int
阐明：返回字符串str第一个字符的ascii码
举例：
hive> select ascii(‘abcde’) from dual;
97


左补足函数：lpad
语法: lpad(string str, int len, string pad)
返回值: string
阐明：将str进行用pad进行左补足到len位
举例：
hive> select lpad(‘abc’,10,’td’) from dual;
tdtdtdtabc
与GP，ORACLE不同，pad 不能默认

右补足函数：rpad
语法: rpad(string str, int len, string pad)
返回值: string
阐明：将str进行用pad进行右补足到len位
举例：
hive> select rpad(‘abc’,10,’td’) from dual;
abctdtdtdt


分割字符串函数: split
语法:  split(string str, string pat)
返回值:  array
阐明: 按照pat字符串分割str，会返回分割后的字符串数组
举例：
hive> select split(‘abtcdtef’,'t’) from dual;
["ab","cd","ef"]



集合查找函数: find_in_set
语法: find_in_set(string str, string strList)
返回值: int
阐明: 返回str在strlist第一次出现的位置，strlist是用逗号分割的字符串。如果没有找该str字符，则返回0
举例：
hive> select find_in_set(‘ab’,'ef,ab,de’) from dual;
2
hive> select find_in_set(‘at’,'ef,ab,de’) from dual;
0


十二 192011


个数统计函数: count
语法: count(*), count(expr), count(DISTINCT expr[, expr_.])
返回值: int
阐明: count(*)统计检索出的行的个数，包括NULL值的行；count(expr)返回指定字段的非空值的个数；count(DISTINCT expr[, expr_.])返回指定字段的不同的非空值的个数
举例：

hive> select count(*) from udftest;
20

hive> select count(distinct t) from udftest;
10



总和统计函数: sum
语法: sum(col), sum(DISTINCT col)
返回值: double
阐明: sum(col)统计成效集中col的相加的成效；sum(DISTINCT col)统计成效中col不同值相加的成效
举例：
hive> select sum(t) from udftest;
100
hive> select sum(distinct t) from udftest;
70

平均值统计函数: avg
语法: avg(col), avg(DISTINCT col)
返回值: double
阐明: avg(col)统计成效集中col的仄均值；avg(DISTINCT col)统计成效中col不同值相加的仄均值
举例：
hive> select avg(t) from udftest;
50
hive> select avg (distinct t) from udftest;
30

最小值统计函数: min
语法: min(col)
返回值: double
阐明: 统计成效集中col字段的最小值
举例：

hive> select min(t) from udftest;
20
最大值统计函数: max
语法: maxcol)
返回值: double
阐明: 统计成效集中col字段的最大值
举例：
hive> select max(t) from udftest;
120

非空集合总体变量函数: var_pop
语法: var_pop(col)
返回值: double
阐明: 统计成效集中col非空集合的总体变量（忽略null）
举例：

非空集合样本变量函数: var_samp
语法: var_samp (col)
返回值: double
阐明: 统计成效集中col非空集合的样本变量（忽略null）
举例：

总体标准偏离函数: stddev_pop
语法: stddev_pop(col)
返回值: double
阐明: 该函数计算总体标准偏离，并返回总体变量的仄方根，其返回值与VAR_POP函数的仄方根沟通
举例：

样本标准偏离函数: stddev_samp
语法: stddev_samp (col)
返回值: double
阐明: 该函数计算样本标准偏离
举例：

中位数函数: percentile
语法: percentile(BIGINT col, p)
返回值: double
阐明: 供准确的第pth个百分位数，p必需介于0和1之间，然则col字段目前只支持整数，不支持浮面数类型
举例：


中位数函数: percentile
语法: percentile(BIGINT col, array(p1 [, p2]…))
返回值: array
阐明: 功用和上述类似，之后后面可以输入多个百分位数，返回类型也为array，其中为对应的百分位数。
举例：
select percentile(score,<0.2,0.4>) from udftest； 取0.2，0.4位置的数据


近似中位数函数: percentile_approx
语法: percentile_approx(DOUBLE col, p [, B])
返回值: double
阐明: 供近似的第pth个百分位数，p必需介于0和1之间，返回类型为double，然则col字段支持浮面类型。参数B控制内存消费的近似精度，B越大，成效的准确度越高。默以为10,000。当col字段中的distinct值的个数小于B时，成效为准确的百分位数
举例：


近似中位数函数: percentile_approx
语法: percentile_approx(DOUBLE col, array(p1 [, p2]…) [, B])
返回值: array
阐明: 功用和上述类似，之后后面可以输入多个百分位数，返回类型也为array，其中为对应的百分位数。
举例：


直方图: histogram_numeric
语法: histogram_numeric(col, b)
返回值: array
阐明: 以b为基准计算col的直方图信息。
举例：
hive> select histogram_numeric(100,5) from dual;
[{"x":100.0,"y":1.0}]



------------------------------------------------

and or 优先级：and 优先级高于or
select id,money from winfunc where (id ='1001' or id ='1002') and money ='100'

cast(money as int)

if(boolean,v1,v2)
select if(2>1,"trueValue","falseValue") from dual;

case when condition then int when then int else int end

--返回类型必须一样
select case when id='1001' then 'V1' when id='1002' then 'V2'
else 'V3' end from tableName;


取json属性值
get_json_object()

select get_json_object('{"name":"jack","age":"20"}','$.name')
from tableName ;

select parse_url('http://baidu.com/path1/p.php?k1=v1&k2=v2#Ref1','HOST')
from tableName;
//baidu.com

concat() 字符串拼接
select concat(type,'123') from tableName;

caoncat_ws() 带分隔符的字符串连接

caoncat_ws('',array<string>)

select caoncat_ws('-',type,'123') from tableName;

select caoncat_ws('-',split(type,'')) from tableName;

collect_set() 把一列收集起来，去重,返回数组
select collect_set(id) from tableName;

collect_list() 把一列收集起来，不去重,返回数组
select collect_list(id) from tableName;


取每个员工第一个最大money的值
first_value(money) over (partition by id order by money desc
rows between 1 preceding and 1 following )

1 preceding
当前行
1 following

第三列的值三行中取最小值
1001 100.0 100.0
1001 150.0 100.0
1001 150.0 150.0
1001 200.0	150.0


当前行指定向后范围的数据
lead(money,2) over (order by money)
1001 100.0 150.0
1001 150.0 200.0
1001 150.0 NULL
1001 200.0	NULL


当前行指定向前范围的数据
lag(money,2) over (order by money)
1001 100.0 NULL
1001 150.0 NULL
1001 150.0 100.0
1001 200.0	150.0


--排序,相当于行号，相同记录一样，否则为自己当前记录行号
rank() Over(partition by id order by money )
select id,money,rank() over(partition by id order by money ) from winfulc;
1001 100.0 1
1001 150.0 2
1001 150.0 2
1001 200.0	4


dense_rank() 行号在你前面最大行号加1
1001 100.0 1
1001 150.0 2
1001 150.0 2
1001 200.0	3



查看当前值在里面的比例
cume_dist() over (partition by id order by money)
((相同值最大行号)/(行号（第几行）))*每个值的个数
1001 100.0 0.25 (4/1)*1
1001 150.0 0.75 (4/3)*2
1001 150.0 0.75	(4/3)*2
1001 200.0	1.0 (4/4)*1



percent_rank() over (partition by id order by money)
((相同值最小行号-1)/(行数-1))
1001 100.0 0.0
1001 150.0 0.3333
1001 150.0 0.3333
1001 200.0	1.0


把所有的数据分两份
ntitle(2) over (partition by id order by money desc nulls last) 分片

select id,money,ntile(2) over (order by money desc) from winfunc;


java_method
reflect
hash



开平方
select java_method("java.lang.Math","sqrt",cast(id as double))
from winfunc;


udft 一行分成多行

select id,adid from winfunc
lateral view explode (split(type,'B')) tt
as adid

round：四舍五入
         select round(数值,小数点位数);

ceil：向上取整
       select ceil(45.6); --46
floor：向下取整
       select floor(45.6); --45

lower：转成小写
     select lower('Hive'); --hive
（2）upper：转成大写
     select lower('Hive'); --HIVE

（3）length：长度
     select length('Hive'); --4

concat：拼接字符串
    select concat('hello','Hive'); --helloHive


substr：求子串
     select substr('hive',2); --ive
     select substr('hive',2,1); --i


trim：去掉前后的空格
         select trim('  hive   '); -hive

lpad：左填充
对hive填充到10位，补位用#
select lpad('hive',10,'#'); --######hive

rpad：右填充
       select rpad('hive',10,'#'); --hive######

select size(map(1,'yy',2,'xx')); --2 map结合的元素个数

select cast(1 as float); --1.0

select cast('2016-05-22' as date); --2016-05-22

select to_date('2015-05-22 15:34:23'); --2015-05-22

select year('2015-05-22 15:34:23'); --2015

select month('2015-05-22 15:34:23'); --5

select day('2015-05-22 15:34:23'); --22

select weekofyear('2015-05-22 15:34:23'); --21

select datediff('2015-05-22 15:34:23','2015-05-29 15:34:23'); --[-7]

select date_add('2015-05-22 15:34:23',2); --2015-05-24

select date_sub('2015-05-22 15:34:23',2); --2015-05-20

coalesce：从左到右返回第一个不为null的值

case...when...：条件表达式

select ename,job,sal,
           case job when 'president' then sal+100
            when 'manager'  then sal+800
            else sal+400
        end
    from emp;


select explode(map(1,'xx',2,'yy',3,'zz'));
1   xx
2   yy
3   zz





 -- HQL内嵌函数只有195个函数(包括操作符，使用命令show functions查看)，基本能够胜任基本的hive开发，但是当有较为复杂的需求的时候，可能需要进行定制的HQL函数开发。HQL支持三种方式来进行功能的扩展(只支持使用java编写实现自定义函数)，分别是：UDF(User-Defined Function)、UDAF(User-Defined Aggregate Function)和UDTF(User-Defined Table-Generating Function)。当我们使用java语言进行开发完成后，将生成的jar包移到linux机器(hive机器)上,进行函数的创建，然后进行使用即可。
 
-- org.apache.hadoop.hive.ql.exec.FunctionRegistry


select unix_timestamp(trackTime) from db_track.track_log limit 2 ;

select year(hiredate) from db_hive01.emp ;

select month(hiredate) from db_hive01.emp ;

select hour(hiredate) from db_hive01.emp ;



select substr(hiredate,0,4) from db_hive01.emp ;

select split(hiredate,'-')[1] from db_hive01.emp ;

select reverse(hiredate) from db_hive01.emp ;

!
!=
%
&
*
+
-
/
<
<=
<=>
<>
=
==
>
>=
^
abs

acos

and

array

array_contains

ascii

asin

assert_true

atan

avg

base64

between

bin

case

ceil

ceiling

coalesce

collect_list

collect_set 返回去重后的元素数组

compute_stats

concat

select concat(empno,'-',empname) from emp ;

select concat('-',empname,'-') from emp ;


concat_ws
context_ngrams
conv
corr
cos
count
covar_pop
covar_samp
create_union
cume_dist
current_database
date_add
date_sub
datediff
day
dayofmonth
decode
degrees
dense_rank
div
e
elt
encode
ewah_bitmap
ewah_bitmap_and
ewah_bitmap_empty
ewah_bitmap_or
exp
explode
field
find_in_set
first_value
floor
format_number
from_unixtime
from_utc_timestamp
get_json_object
hash
hex
histogram_numeric
hour
if
in
in_file
index
inline
instr
isnotnull
isnull
java_method
json_tuple
lag
last_value
lcase
lead
length
like
ln
locate
log
log10
log2
lower
lpad
ltrim
map
map_keys
map_values
matchpath
max
min
minute
month
named_struct
negative
ngrams
noop
noopwithmap
not
ntile
nvl
or
parse_url
parse_url_tuple
percent_rank
percentile
percentile_approx
pi
pmod
posexplode
positive
pow
power
printf
radians
rand
rank
reflect
reflect2
regexp
regexp_extract
regexp_replace
repeat
reverse
rlike
round
row_number
rpad
rtrim
second
sentences
sign
sin
size
sort_array
space
split
sqrt
stack
std
stddev
stddev_pop
stddev_samp
str_to_map
struct
substr
substring
sum
tan
to_date
to_unix_timestamp
to_utc_timestamp
translate
trim
ucase



unbase64
unhex
unix_timestamp
upper
select upper(enpname) from emp;

var_pop
var_samp
variance
weekofyear
when
windowingtablefunction
xpath
xpath_boolean
xpath_double
xpath_float
xpath_int
xpath_long
xpath_number
xpath_short
xpath_string
year




简单函数  map阶段
关系 = <>,>,>=,<,is null,rlike
数学
逻辑
数值
类型转换
日期
条件
字符串
统计


聚合函数  reduce阶段
sum()
count()
avg()
distinct()
min
max



集合函数  map阶段
map
struct
array
构建 访问 长度


特殊函数


---------------------------------------------------------------------------------
分析函数
    The Over clause
        count
        sum
        min
        max
        avg

        rank
        row_number
        dense_rank
        cume_dist
        percent_rank
        ntile

---------------------------------------------------------------------------
混合函数

UDTF



show functions
160个左右
desc function concat
desc function extended concat

默认的描述信息



一、关系运算：
1. 等值比较: =
         语法：A=B
         操作类型：所有基本类型
         描述: 如果表达式A与表达式B相等，则为TRUE；否则为FALSE
         举例：
         hive>select 1 from lxw_dual where 1=1;
         1
2. 不等值比较: <>
         语法: A <> B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A与表达式B不相等，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where 1 <> 2;
1
3. 小于比较: <</h3>
         语法: A < B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A小于表达式B，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where 1 < 2;
1

4. 小于等于比较: <=
语法: A <= B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A小于或者等于表达式B，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where 1 <= 1;
1
5. 大于比较: >
语法: A > B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A大于表达式B，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where 2 > 1;
1

6. 大于等于比较: >=
语法: A >= B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A大于或者等于表达式B，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where 1 >= 1;
1

注意：String的比较要注意(常用的时间比较可以先to_date之后再比较)
hive> select* from lxw_dual;
201111120900:00:00     2011111209

hive> selecta,b,ab,a=b from lxw_dual;
201111120900:00:00     2011111209      false   true    false

7. 空值判断: IS NULL
语法: A IS NULL
操作类型: 所有类型
描述: 如果表达式A的值为NULL，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where null is null;
1

8. 非空判断: IS NOTNULL
语法: A IS NOT NULL
操作类型: 所有类型
描述: 如果表达式A的值为NULL，则为FALSE；否则为TRUE
举例：
hive> select1 from lxw_dual where 1 is not null;
1

9. LIKE比较: LIKE
语法: A LIKE B
操作类型: strings
描述: 如果字符串A或者字符串B为NULL，则返回NULL；如果字符串A符合表达式B   的正则语法，则为TRUE；否则为FALSE。B中字符”_”表示任意单个字符，而字符”%”表示任意数量的字符。
举例：
hive> select1 from lxw_dual where 'football' like 'foot%';
1
hive> select1 from lxw_dual where 'football' like 'foot____';
1
注意：否定比较时候用NOT ALIKE B
hive> select1 from lxw_dual where NOT 'football' like 'fff%';
1

10. JAVA的LIKE操作: RLIKE
语法: A RLIKE B
操作类型: strings
描述: 如果字符串A或者字符串B为NULL，则返回NULL；如果字符串A符合JAVA正则表达式B的正则语法，则为TRUE；否则为FALSE。
举例：
hive> select1 from lxw_dual where 'footbar’ rlike '^f.*r$’;
1
注意：判断一个字符串是否全为数字：
hive>select 1from lxw_dual where '123456' rlike '^\\d+$';
1
hive> select1 from lxw_dual where '123456aa' rlike '^\\d+$';

11. REGEXP操作: REGEXP
语法: A REGEXP B
操作类型: strings
描述: 功能与RLIKE相同
举例：
hive> select1 from lxw_dual where 'footbar' REGEXP '^f.*r$';
1
二、数学运算：
1. 加法操作: +
语法: A + B
操作类型：所有数值类型
说明：返回A与B相加的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。比如，int + int 一般结果为int类型，而int + double 一般结果为double类型
举例：
hive> select1 + 9 from lxw_dual;
10
hive> createtable lxw_dual as select 1 + 1.2 from lxw_dual;
hive> describelxw_dual;
_c0     double

2. 减法操作: -
语法: A – B
操作类型：所有数值类型
说明：返回A与B相减的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。比如，int – int 一般结果为int类型，而int – double 一般结果为double类型
举例：
hive> select10 – 5 from lxw_dual;
5
hive> createtable lxw_dual as select 5.6 – 4 from lxw_dual;
hive>describe lxw_dual;
_c0     double

3. 乘法操作: *
语法: A * B
操作类型：所有数值类型
说明：返回A与B相乘的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。注意，如果A乘以B的结果超过默认结果类型的数值范围，则需要通过cast将结果转换成范围更大的数值类型
举例：
hive> select40 * 5 from lxw_dual;
200

4. 除法操作: /
语法: A / B
操作类型：所有数值类型
说明：返回A除以B的结果。结果的数值类型为double
举例：
hive> select40 / 5 from lxw_dual;
8.0

注意：hive中最高精度的数据类型是double,只精确到小数点后16位，在做除法运算的时候要特别注意
hive>select ceil(28.0/6.999999999999999999999) from lxw_duallimit 1;
结果为4
hive>select ceil(28.0/6.99999999999999) from lxw_dual limit1;
结果为5

5. 取余操作: %
语法: A % B
操作类型：所有数值类型
说明：返回A除以B的余数。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 41 % 5 from lxw_dual;
1
hive> select 8.4 % 4 from lxw_dual;
0.40000000000000036
注意：精度在hive中是个很大的问题，类似这样的操作最好通过round指定精度
hive> select round(8.4 % 4 , 2) from lxw_dual;
0.4
6. 位与操作: &
语法: A & B
操作类型：所有数值类型
说明：返回A和B按位进行与操作的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 4 & 8 from lxw_dual;
0
hive> select 6 & 4 from lxw_dual;
4

7. 位或操作: |
语法: A | B
操作类型：所有数值类型
说明：返回A和B按位进行或操作的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 4 | 8 from lxw_dual;
12
hive> select 6 | 8 from lxw_dual;
14

8. 位异或操作: ^
语法: A ^ B
操作类型：所有数值类型
说明：返回A和B按位进行异或操作的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 4 ^ 8 from lxw_dual;
12
hive> select 6 ^ 4 from lxw_dual;
2

9．位取反操作: ~
语法: ~A
操作类型：所有数值类型
说明：返回A按位取反操作的结果。结果的数值类型等于A的类型。
举例：
hive> select ~6 from lxw_dual;
-7
hive> select ~4 from lxw_dual;
-5
三、逻辑运算：
1. 逻辑与操作: AND
语法: A AND B
操作类型：boolean
说明：如果A和B均为TRUE，则为TRUE；否则为FALSE。如果A为NULL或B为NULL，则为NULL
举例：
hive> select 1 from lxw_dual where 1=1 and 2=2;
1

2. 逻辑或操作: OR
语法: A OR B
操作类型：boolean
说明：如果A为TRUE，或者B为TRUE，或者A和B均为TRUE，则为TRUE；否则为FALSE
举例：
hive> select 1 from lxw_dual where 1=2 or 2=2;
1

3. 逻辑非操作: NOT
语法: NOT A
操作类型：boolean
说明：如果A为FALSE，或者A为NULL，则为TRUE；否则为FALSE
举例：
hive> select 1 from lxw_dual where not 1=2;
1

四、数值计算
1. 取整函数: round
语法: round(double a)
返回值: BIGINT
说明: 返回double类型的整数值部分 （遵循四舍五入）
举例：
hive> select round(3.1415926) from lxw_dual;
3
hive> select round(3.5) from lxw_dual;
4
hive> create table lxw_dual as select round(9542.158) fromlxw_dual;
hive> describe lxw_dual;
_c0     bigint

2. 指定精度取整函数: round
语法: round(double a, int d)
返回值: DOUBLE
说明: 返回指定精度d的double类型
举例：
hive> select round(3.1415926,4) from lxw_dual;
3.1416

3. 向下取整函数: floor
语法: floor(double a)
返回值: BIGINT
说明: 返回等于或者小于该double变量的最大的整数
举例：
hive> select floor(3.1415926) from lxw_dual;
3
hive> select floor(25) from lxw_dual;
25

4. 向上取整函数: ceil
语法: ceil(double a)
返回值: BIGINT
说明: 返回等于或者大于该double变量的最小的整数
举例：
hive> select ceil(3.1415926) from lxw_dual;
4
hive> select ceil(46) from lxw_dual;
46

5. 向上取整函数: ceiling
语法: ceiling(double a)
返回值: BIGINT
说明: 与ceil功能相同
举例：
hive> select ceiling(3.1415926) from lxw_dual;
4
hive> select ceiling(46) from lxw_dual;
46
6. 取随机数函数: rand
语法: rand(),rand(int seed)
返回值: double
说明: 返回一个0到1范围内的随机数。如果指定种子seed，则会等到一个稳定的随机数序列
举例：
hive> select rand() from lxw_dual;
0.5577432776034763
hive> select rand() from lxw_dual;
0.6638336467363424
hive> select rand(100) from lxw_dual;
0.7220096548596434
hive> select rand(100) from lxw_dual;
0.7220096548596434

7. 自然指数函数: exp
语法: exp(double a)
返回值: double
说明: 返回自然对数e的a次方
举例：
hive> select exp(2) from lxw_dual;
7.38905609893065
自然对数函数: ln
语法: ln(double a)
返回值: double
说明: 返回a的自然对数
举例：
hive> select ln(7.38905609893065) from lxw_dual;
2.0

8. 以10为底对数函数: log10
语法: log10(double a)
返回值: double
说明: 返回以10为底的a的对数
举例：
hive> select log10(100) from lxw_dual;
2.0

9. 以2为底对数函数: log2
语法: log2(double a)
返回值: double
说明: 返回以2为底的a的对数
举例：
hive> select log2(8) from lxw_dual;
3.0

10. 对数函数: log
语法: log(double base, double a)
返回值: double
说明: 返回以base为底的a的对数
举例：
hive> select log(4,256) from lxw_dual;
4.0

11. 幂运算函数: pow
语法: pow(double a, double p)
返回值: double
说明: 返回a的p次幂
举例：
hive> select pow(2,4) from lxw_dual;
16.0

12. 幂运算函数: power
语法: power(double a, double p)
返回值: double
说明: 返回a的p次幂,与pow功能相同
举例：
hive> select power(2,4) from lxw_dual;
16.0

13. 开平方函数: sqrt
语法: sqrt(double a)
返回值: double
说明: 返回a的平方根
举例：
hive> select sqrt(16) from lxw_dual;
4.0

14. 二进制函数: bin
语法: bin(BIGINT a)
返回值: string
说明: 返回a的二进制代码表示
举例：
hive> select bin(7) from lxw_dual;
111

15. 十六进制函数: hex
语法: hex(BIGINT a)
返回值: string
说明: 如果变量是int类型，那么返回a的十六进制表示；如果变量是string类型，则返回该字符串的十六进制表示
举例：
hive> select hex(17) from lxw_dual;
11
hive> select hex(‘abc’) from lxw_dual;
616263

16. 反转十六进制函数: unhex
语法: unhex(string a)
返回值: string
说明: 返回该十六进制字符串所代码的字符串
举例：
hive> select unhex(‘616263’) from lxw_dual;
abc
hive> select unhex(‘11’) from lxw_dual;
-
hive> select unhex(616263) from lxw_dual;
abc

17. 进制转换函数: conv
语法: conv(BIGINT num, int from_base, int to_base)
返回值: string
说明: 将数值num从from_base进制转化到to_base进制
举例：
hive> select conv(17,10,16) from lxw_dual;
11
hive> select conv(17,10,2) from lxw_dual;
10001

18. 绝对值函数: abs
语法: abs(double a)   abs(int a)
返回值: double        int
说明: 返回数值a的绝对值
举例：
hive> select abs(-3.9) from lxw_dual;
3.9
hive> select abs(10.9) from lxw_dual;
10.9

19. 正取余函数: pmod
语法: pmod(int a, int b),pmod(double a, double b)
返回值: int double
说明: 返回正的a除以b的余数
举例：
hive> select pmod(9,4) from lxw_dual;
1
hive> select pmod(-9,4) from lxw_dual;
3

20. 正弦函数: sin
语法: sin(double a)
返回值: double
说明: 返回a的正弦值
举例：
hive> select sin(0.8) from lxw_dual;
0.7173560908995228

21. 反正弦函数: asin
语法: asin(double a)
返回值: double
说明: 返回a的反正弦值
举例：
hive> select asin(0.7173560908995228) from lxw_dual;
0.8

22. 余弦函数: cos
语法: cos(double a)
返回值: double
说明: 返回a的余弦值
举例：
hive> select cos(0.9) from lxw_dual;
0.6216099682706644

23. 反余弦函数: acos
语法: acos(double a)
返回值: double
说明: 返回a的反余弦值
举例：
hive> select acos(0.6216099682706644) from lxw_dual;
0.9
24. positive函数: positive
语法: positive(int a), positive(double a)
返回值: int double
说明: 返回a
举例：
hive> select positive(-10) from lxw_dual;
-10
hive> select positive(12) from lxw_dual;
12
25. negative函数: negative
语法: negative(int a), negative(double a)
返回值: int double
说明: 返回-a
举例：
hive> select negative(-5) from lxw_dual;
5
hive> select negative(8) from lxw_dual;
-8
五、日期函数
1. UNIX时间戳转日期函数:from_unixtime
语法: from_unixtime(bigint unixtime[, string format])
返回值: string
说明: 转化UNIX时间戳（从1970-01-01 00:00:00 UTC到指定时间的秒数）到当前时区的时间格式
举例：
hive> select from_unixtime(1323308943,'yyyyMMdd') fromlxw_dual;
20111208
2. 获取当前UNIX时间戳函数:unix_timestamp
语法: unix_timestamp()
返回值: bigint
说明: 获得当前时区的UNIX时间戳
举例：
hive> select unix_timestamp() from lxw_dual;
1323309615
3. 日期转UNIX时间戳函数:unix_timestamp
语法: unix_timestamp(string date)
返回值: bigint
说明: 转换格式为"yyyy-MM-ddHH:mm:ss"的日期到UNIX时间戳。如果转化失败，则返回0。
举例：
hive> select unix_timestamp('2011-12-07 13:01:03') from lxw_dual;
1323234063
4. 指定格式日期转UNIX时间戳函数:unix_timestamp
语法: unix_timestamp(string date, string pattern)
返回值: bigint
说明: 转换pattern格式的日期到UNIX时间戳。如果转化失败，则返回0。
举例：
hive> select unix_timestamp('20111207 13:01:03','yyyyMMddHH:mm:ss') from lxw_dual;
1323234063
5. 日期时间转日期函数:to_date
语法: to_date(string timestamp)
返回值: string
说明: 返回日期时间字段中的日期部分。
举例：
hive> select to_date('2011-12-08 10:03:01') from lxw_dual;
2011-12-08

6. 日期转年函数: year
语法: year(string date)
返回值: int
说明: 返回日期中的年。
举例：
hive> select year('2011-12-08 10:03:01') from lxw_dual;
2011
hive> select year('2012-12-08') from lxw_dual;
2012

7. 日期转月函数: month
语法: month (string date)
返回值: int
说明: 返回日期中的月份。
举例：
hive> select month('2011-12-08 10:03:01') from lxw_dual;
12
hive> select month('2011-08-08') from lxw_dual;
8

8. 日期转天函数: day
语法: day (string date)
返回值: int
说明: 返回日期中的天。
举例：
hive> select day('2011-12-08 10:03:01') from lxw_dual;
8
hive> select day('2011-12-24') from lxw_dual;
24

9. 日期转小时函数: hour
语法: hour (string date)
返回值: int
说明: 返回日期中的小时。
举例：
hive> select hour('2011-12-08 10:03:01') from lxw_dual;
10

10. 日期转分钟函数: minute
语法: minute (string date)
返回值: int
说明: 返回日期中的分钟。
举例：
hive> select minute('2011-12-08 10:03:01') from lxw_dual;
3

11. 日期转秒函数: second
语法: second (string date)
返回值: int
说明: 返回日期中的秒。
举例：
hive> select second('2011-12-08 10:03:01') from lxw_dual;
1

12. 日期转周函数:weekofyear
语法: weekofyear (string date)
返回值: int
说明: 返回日期在当前的周数。
举例：
hive> select weekofyear('2011-12-08 10:03:01') from lxw_dual;
49

13. 日期比较函数: datediff
语法: datediff(string enddate, string startdate)
返回值: int
说明: 返回结束日期减去开始日期的天数。
举例：
hive> select datediff('2012-12-08','2012-05-09') from lxw_dual;
213

14. 日期增加函数: date_add
语法: date_add(string startdate, int days)
返回值: string
说明: 返回开始日期startdate增加days天后的日期。
举例：
hive> select date_add('2012-12-08',10) from lxw_dual;
2012-12-18

15. 日期减少函数: date_sub
语法: date_sub (string startdate, int days)
返回值: string
说明: 返回开始日期startdate减少days天后的日期。
举例：
hive> select date_sub('2012-12-08',10) from lxw_dual;
2012-11-28

六、条件函数
1. If函数: if
语法: if(boolean testCondition, T valueTrue, T valueFalseOrNull)
返回值: T
说明:  当条件testCondition为TRUE时，返回valueTrue；否则返回valueFalseOrNull
举例：
hive> select if(1=2,100,200) from lxw_dual;
200
hive> select if(1=1,100,200) from lxw_dual;
100

2. 非空查找函数: COALESCE
语法: COALESCE(T v1, T v2, …)
返回值: T
说明:  返回参数中的第一个非空值；如果所有值都为NULL，那么返回NULL
举例：
hive> select COALESCE(null,'100','50′) from lxw_dual;
100

3. 条件判断函数：CASE
语法: CASE a WHEN b THEN c [WHEN d THEN e]* [ELSE f] END
返回值: T
说明：如果a等于b，那么返回c；如果a等于d，那么返回e；否则返回f
举例：
hive> Select case 100 when 50 then 'tom' when 100 then 'mary'else 'tim' end from lxw_dual;
mary
hive> Select case 200 when 50 then 'tom' when 100 then 'mary'else 'tim' end from lxw_dual;
tim

4. 条件判断函数：CASE
语法: CASE WHEN a THEN b [WHEN c THEN d]* [ELSE e] END
返回值: T
说明：如果a为TRUE,则返回b；如果c为TRUE，则返回d；否则返回e
举例：
hive> select case when 1=2 then 'tom' when 2=2 then 'mary' else'tim' end from lxw_dual;
mary
hive> select case when 1=1 then 'tom' when 2=2 then 'mary' else'tim' end from lxw_dual;
tom

七、字符串函数
1. 字符串长度函数：length
语法: length(string A)
返回值: int
说明：返回字符串A的长度
举例：
hive> select length('abcedfg') from lxw_dual;
7

2. 字符串反转函数：reverse
语法: reverse(string A)
返回值: string
说明：返回字符串A的反转结果
举例：
hive> select reverse(abcedfg’) from lxw_dual;
gfdecba

3. 字符串连接函数：concat
语法: concat(string A, string B…)
返回值: string
说明：返回输入字符串连接后的结果，支持任意个输入字符串
举例：
hive> select concat(‘abc’,'def’,'gh’) from lxw_dual;
abcdefgh

4. 带分隔符字符串连接函数：concat_ws
语法: concat_ws(string SEP, string A, string B…)
返回值: string
说明：返回输入字符串连接后的结果，SEP表示各个字符串间的分隔符
举例：
hive> select concat_ws(',','abc','def','gh') from lxw_dual;
abc,def,gh

5. 字符串截取函数：substr,substring
语法: substr(string A, int start),substring(string A, int start)
返回值: string
说明：返回字符串A从start位置到结尾的字符串
举例：
hive> select substr('abcde',3) from lxw_dual;
cde
hive> select substring('abcde',3) from lxw_dual;
cde
hive>  selectsubstr('abcde',-1) from lxw_dual;  （和ORACLE相同）
e

6. 字符串截取函数：substr,substring
语法: substr(string A, int start, int len),substring(string A, intstart, int len)
返回值: string
说明：返回字符串A从start位置开始，长度为len的字符串
举例：
hive> select substr('abcde',3,2) from lxw_dual;
cd
hive> select substring('abcde',3,2) from lxw_dual;
cd
hive>select substring('abcde',-2,2) from lxw_dual;
de

7. 字符串转大写函数：upper,ucase
语法: upper(string A) ucase(string A)
返回值: string
说明：返回字符串A的大写格式
举例：
hive> select upper('abSEd') from lxw_dual;
hive> select ucase('abSEd') from lxw_dual;

8. 字符串转小写函数：lower,lcase
语法: lower(string A) lcase(string A)
返回值: string
说明：返回字符串A的小写格式
举例：
hive> select lower('abSEd') from lxw_dual;
absed
hive> select lcase('abSEd') from lxw_dual;
absed

9. 去空格函数：trim
语法: trim(string A)
返回值: string
说明：去除字符串两边的空格
举例：
hive> select trim(' abc ') from lxw_dual;
abc

10. 左边去空格函数：ltrim
语法: ltrim(string A)
返回值: string
说明：去除字符串左边的空格
举例：
hive> select ltrim(' abc ') from lxw_dual;
abc

11. 右边去空格函数：rtrim
语法: rtrim(string A)
返回值: string
说明：去除字符串右边的空格
举例：
hive> select rtrim(' abc ') from lxw_dual;
abc

12. 正则表达式替换函数：regexp_replace
语法: regexp_replace(string A, string B, string C)
返回值: string
说明：将字符串A中的符合java正则表达式B的部分替换为C。注意，在有些情况下要使用转义字符,类似oracle中的regexp_replace函数。
举例：
hive> select regexp_replace('foobar', 'oo|ar', '') from lxw_dual;
fb

13. 正则表达式解析函数：regexp_extract
语法: regexp_extract(string subject, string pattern, int index)
返回值: string
说明：将字符串subject按照pattern正则表达式的规则拆分，返回index指定的字符。
举例：
hive> select regexp_extract('foothebar', 'foo(.*?)(bar)', 1) fromlxw_dual;
the
hive> select regexp_extract('foothebar', 'foo(.*?)(bar)', 2) fromlxw_dual;
bar
hive> select regexp_extract('foothebar', 'foo(.*?)(bar)', 0) fromlxw_dual;
foothebar
注意，在有些情况下要使用转义字符，下面的等号要用双竖线转义，这是java正则表达式的规则。
select data_field,
     regexp_extract(data_field,'.*?bgStart\\=([^&]+)',1) as aaa,
     regexp_extract(data_field,'.*?contentLoaded_headStart\\=([^&]+)',1) as bbb,
     regexp_extract(data_field,'.*?AppLoad2Req\\=([^&]+)',1) as ccc
     from pt_nginx_loginlog_st
     where pt = '2012-03-26'limit 2;

14. URL解析函数：parse_url
语法: parse_url(string urlString, string partToExtract [, stringkeyToExtract])
返回值: string
说明：返回URL中指定的部分。partToExtract的有效值为：HOST, PATH, QUERY, REF, PROTOCOL, AUTHORITY, FILE, and USERINFO.
举例：
hive> selectparse_url('http://facebook.com/path1/p.php?k1=v1&k2=v2#Ref1', 'HOST') fromlxw_dual;
facebook.com
hive> selectparse_url('http://facebook.com/path1/p.php?k1=v1&k2=v2#Ref1', 'QUERY','k1') from lxw_dual;
v1
15. json解析函数：get_json_object
语法: get_json_object(string json_string, string path)
返回值: string
说明：解析json的字符串json_string,返回path指定的内容。如果输入的json字符串无效，那么返回NULL。
举例：
hive> select  get_json_object('{"store":
>   {"fruit":\[{"weight":8,"type":"apple"},{"weight":9,"type":"pear"}],
>    "bicycle":{"price":19.95,"color":"red"}
>   },
>  "email":"amy@only_for_json_udf_test.net",
>  "owner":"amy"
> }
> ','$.owner') from lxw_dual;
amy

16. 空格字符串函数：space
语法: space(int n)
返回值: string
说明：返回长度为n的字符串
举例：
hive> select space(10) from lxw_dual;
hive> select length(space(10)) from lxw_dual;
10

17. 重复字符串函数：repeat
语法: repeat(string str, int n)
返回值: string
说明：返回重复n次后的str字符串
举例：
hive> select repeat('abc',5) from lxw_dual;
abcabcabcabcabc

18. 首字符ascii函数：ascii
语法: ascii(string str)
返回值: int
说明：返回字符串str第一个字符的ascii码
举例：
hive> select ascii('abcde') from lxw_dual;
97

19. 左补足函数：lpad
语法: lpad(string str, int len, string pad)
返回值: string
说明：将str进行用pad进行左补足到len位
举例：
hive> select lpad('abc',10,'td') from lxw_dual;
tdtdtdtabc
注意：与GP，ORACLE不同，pad 不能默认

20. 右补足函数：rpad
语法: rpad(string str, int len, string pad)
返回值: string
说明：将str进行用pad进行右补足到len位
举例：
hive> select rpad('abc',10,'td') from lxw_dual;
abctdtdtdt

21. 分割字符串函数: split
语法:  split(string str, stringpat)
返回值:  array
说明: 按照pat字符串分割str，会返回分割后的字符串数组
举例：
hive> select split('abtcdtef','t') from lxw_dual;
["ab","cd","ef"]

22. 集合查找函数:find_in_set
语法: find_in_set(string str, string strList)
返回值: int
说明: 返回str在strlist第一次出现的位置，strlist是用逗号分割的字符串。如果没有找该str字符，则返回0
举例：
hive> select find_in_set('ab','ef,ab,de') from lxw_dual;
2
hive> select find_in_set('at','ef,ab,de') from lxw_dual;
0

八、集合统计函数
1. 个数统计函数: count
语法: count(*), count(expr), count(DISTINCT expr[, expr_.])
返回值: int
说明: count(*)统计检索出的行的个数，包括NULL值的行；count(expr)返回指定字段的非空值的个数；count(DISTINCTexpr[, expr_.])返回指定字段的不同的非空值的个数
举例：
hive> select count(*) from lxw_dual;
20
hive> select count(distinct t) from lxw_dual;
10

2. 总和统计函数: sum
语法: sum(col), sum(DISTINCT col)
返回值: double
说明: sum(col)统计结果集中col的相加的结果；sum(DISTINCT col)统计结果中col不同值相加的结果
举例：
hive> select sum(t) from lxw_dual;
100
hive> select sum(distinct t) from lxw_dual;
70

3. 平均值统计函数: avg
语法: avg(col), avg(DISTINCT col)
返回值: double
说明: avg(col)统计结果集中col的平均值；avg(DISTINCT col)统计结果中col不同值相加的平均值
举例：
hive> select avg(t) from lxw_dual;
50
hive> select avg (distinct t) from lxw_dual;
30

4. 最小值统计函数: min
语法: min(col)
返回值: double
说明: 统计结果集中col字段的最小值
举例：
hive> select min(t) from lxw_dual;
20

5. 最大值统计函数: max
语法: maxcol)
返回值: double
说明: 统计结果集中col字段的最大值
举例：
hive> select max(t) from lxw_dual;
120

6. 非空集合总体变量函数:var_pop
语法: var_pop(col)
返回值: double
说明: 统计结果集中col非空集合的总体变量（忽略null）
举例：

7. 非空集合样本变量函数:var_samp
语法: var_samp (col)
返回值: double
说明: 统计结果集中col非空集合的样本变量（忽略null）
举例：

8. 总体标准偏离函数:stddev_pop
语法: stddev_pop(col)
返回值: double
说明: 该函数计算总体标准偏离，并返回总体变量的平方根，其返回值与VAR_POP函数的平方根相同
举例：

9. 样本标准偏离函数:stddev_samp
语法: stddev_samp (col)
返回值: double
说明: 该函数计算样本标准偏离
举例：

10．中位数函数:percentile
语法: percentile(BIGINT col, p)
返回值: double
说明: 求准确的第pth个百分位数，p必须介于0和1之间，但是col字段目前只支持整数，不支持浮点数类型
举例：

11. 中位数函数:percentile
语法: percentile(BIGINT col, array(p1 [, p2]…))
返回值: array
说明: 功能和上述类似，之后后面可以输入多个百分位数，返回类型也为array，其中为对应的百分位数。
举例：
select percentile(score,<0.2,0.4>) from lxw_dual； 取0.2，0.4位置的数据

12. 近似中位数函数:percentile_approx
语法: percentile_approx(DOUBLE col, p [, B])
返回值: double
说明: 求近似的第pth个百分位数，p必须介于0和1之间，返回类型为double，但是col字段支持浮点类型。参数B控制内存消耗的近似精度，B越大，结果的准确度越高。默认为10,000。当col字段中的distinct值的个数小于B时，结果为准确的百分位数
举例：
13. 近似中位数函数:percentile_approx
语法: percentile_approx(DOUBLE col, array(p1 [, p2]…) [, B])
返回值: array
说明: 功能和上述类似，之后后面可以输入多个百分位数，返回类型也为array，其中为对应的百分位数。
举例：

14. 直方图:histogram_numeric
语法: histogram_numeric(col, b)
返回值: array‘x’,‘y’}>
说明: 以b为基准计算col的直方图信息。
举例：
hive> select histogram_numeric(100,5) from lxw_dual;
[{"x":100.0,"y":1.0}]

九、复合类型构建操作
1. Map类型构建: map
语法: map (key1, value1, key2, value2, …)
说明：根据输入的key和value对构建map类型
举例：
hive> Create table lxw_test as select map('100','tom','200','mary')as t from lxw_dual;
hive> describe lxw_test;
t       map
hive> select t from lxw_test;
{"100":"tom","200":"mary"}

2. Struct类型构建: struct
语法: struct(val1, val2, val3, …)
说明：根据输入的参数构建结构体struct类型
举例：
hive> create table lxw_test as select struct('tom','mary','tim')as t from lxw_dual;
hive> describe lxw_test;
t       struct
hive> select t from lxw_test;
{"col1":"tom","col2":"mary","col3":"tim"}

3. array类型构建: array
语法: array(val1, val2, …)
说明：根据输入的参数构建数组array类型
举例：
hive> create table lxw_test as selectarray("tom","mary","tim") as t from lxw_dual;
hive> describe lxw_test;
t       array
hive> select t from lxw_test;
["tom","mary","tim"]

十、复杂类型访问操作
1. array类型访问: A[n]
语法: A[n]
操作类型: A为array类型，n为int类型
说明：返回数组A中的第n个变量值。数组的起始下标为0。比如，A是个值为['foo', 'bar']的数组类型，那么A[0]将返回'foo',而A[1]将返回'bar'
举例：
hive> create table lxw_test as selectarray("tom","mary","tim") as t from lxw_dual;
hive> select t[0],t[1],t[2] from lxw_test;
tom     mary    tim

2. map类型访问: M[key]
语法: M[key]
操作类型: M为map类型，key为map中的key值
说明：返回map类型M中，key值为指定值的value值。比如，M是值为{'f' -> 'foo', 'b'-> 'bar', 'all' -> 'foobar'}的map类型，那么M['all']将会返回'foobar'
举例：
hive> Create table lxw_test as selectmap('100','tom','200','mary') as t from lxw_dual;
hive> select t['200'],t['100'] from lxw_test;
mary    tom

3. struct类型访问: S.x
语法: S.x
操作类型: S为struct类型
说明：返回结构体S中的x字段。比如，对于结构体struct foobar {int foo, int bar}，foobar.foo返回结构体中的foo字段
举例：
hive> create table lxw_test as select struct('tom','mary','tim')as t from lxw_dual;
hive> describe lxw_test;
t       struct
hive> select t.col1,t.col3 from lxw_test;
tom     tim

十一、复杂类型长度统计函数
1.    Map类型长度函数: size(Map)
语法: size(Map)
返回值: int
说明: 返回map类型的长度
举例：
hive> select size(map('100','tom','101','mary')) from lxw_dual;
2

2.    array类型长度函数: size(Array)
语法: size(Array)
返回值: int
说明: 返回array类型的长度
举例：
hive> select size(array('100','101','102','103')) from lxw_dual;
4

3.    类型转换函数
类型转换函数: cast
语法: cast(expr as )
返回值: Expected "=" to follow "type"
说明: 返回array类型的长度
举例：
hive> select cast(1 as bigint) from lxw_dual;
1

